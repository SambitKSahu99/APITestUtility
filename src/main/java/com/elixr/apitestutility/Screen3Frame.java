/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.elixr.apitestutility;

import java.awt.Component;
import javax.swing.JFrame;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import org.json.JSONObject;

/**
 *
 * @author sambit.sahu
 */
public class Screen3Frame extends javax.swing.JFrame {

    /**
     * Creates new form Screen3Frame
     *
     * @param tableData
     * @param state
     */
    public Screen3Frame(Object[][] tableData, int state) {
        initComponents();
        setupFrame(state);
        populateResultTable(tableData);
    }

    public Screen3Frame() {
    }

    private void setupFrame(int state) {
        setExtendedState(state);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }

    private void populateResultTable(Object[][] tableData) {

        // Add an "SL" column to the table data
        Object[][] updatedTableData = new Object[tableData.length][6]; // 6 columns now
        for (int i = 0; i < tableData.length; i++) {
            updatedTableData[i][0] = i + 1; // SL column with serial numbers starting from 1
            System.arraycopy(tableData[i], 0, updatedTableData[i], 1, tableData[i].length);
        }

        DefaultTableModel model = new DefaultTableModel(
                updatedTableData,
                new String[]{"SL", "Test Name", "Request Body", "Response Code", "Response Body", "Test Result"}
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return true; // Make the table cells non-editable.
            }
        };

        resultTable.setModel(model);
        resultTable.getColumnModel().getColumn(2).setCellRenderer(new JsonCellRenderer());
//        resultTable.getColumnModel().getColumn(2).setCellEditor(new TextAreaEditor());
        for (int row = 0; row < resultTable.getRowCount(); row++) {
            adjustRowHeight(resultTable, row, 2); // Adjust for column 2 ("Request Body")
        }
        resultTableScrollPane.revalidate();
        resultTableScrollPane.repaint();
//      resultTable.getColumnModel().getColumn(2).setCellRenderer(new BeautifiedJsonCellRenderer());
    }

    private static void adjustRowHeight(JTable table, int row, int column) {
        TableCellRenderer renderer = table.getCellRenderer(row, column);
        Component comp = table.prepareRenderer(renderer, row, column);
        int preferredHeight = comp.getPreferredSize().height;
        table.setRowHeight(row, Math.max(table.getRowHeight(row), preferredHeight));
    }

    class JsonCellRenderer extends DefaultTableCellRenderer {

        private final JTextArea textArea = new JTextArea();

        public JsonCellRenderer() {
            textArea.setLineWrap(true);
            textArea.setWrapStyleWord(true);
        }

        @Override
        public Component getTableCellRendererComponent(
                JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {

            if (value != null) {
                try {
                    // Format the JSON value
                    String formattedJson = new JSONObject(value.toString()).toString(4); // Indent with 4 spaces
                    textArea.setText(formattedJson);
                } catch (Exception e) {
                    // If value is not valid JSON, display as is
                    textArea.setText(value.toString());
                }
            } else {
                textArea.setText("");
            }

            textArea.setBackground(isSelected ? table.getSelectionBackground() : table.getBackground());
            textArea.setForeground(isSelected ? table.getSelectionForeground() : table.getForeground());

            return textArea;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        resultTableScrollPane = new javax.swing.JScrollPane();
        resultTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(689, 476));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Result");

        resultTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        resultTableScrollPane.setViewportView(resultTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resultTableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultTableScrollPane)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Screen3Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Screen3Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Screen3Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Screen3Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Screen3Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTable resultTable;
    private javax.swing.JScrollPane resultTableScrollPane;
    // End of variables declaration//GEN-END:variables
}
